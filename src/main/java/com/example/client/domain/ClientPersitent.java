package com.example.client.domain;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.*;

import java.time.LocalDate;

@Setter
@ToString
@EqualsAndHashCode
@DynamoDBTable(tableName = "Client")
@NoArgsConstructor
@AllArgsConstructor
public class ClientPersitent {

    private String id;
    private String name;
    private String surename;
    private LocalDate birthDate;
    private LocalDate predictedDeathDate;

    public ClientPersitent(ClientDTO value) {
        this.name = value.getName();
        this.surename = value.getSureName();
        this.birthDate = value.getBirthDate();
        this.predictedDeathDate = value.getPredictedDeathDate();
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    @DynamoDBAttribute
    public String getName() {
        return name;
    }

    @DynamoDBAttribute
    public String getSurename() {
        return surename;
    }

    @DynamoDBTypeConverted( converter = LocalDateConverter.class )
    public LocalDate getBirthDate() {
        return birthDate;
    }

    @DynamoDBTypeConverted( converter = LocalDateConverter.class )
    public LocalDate getPredictedDeathDate() {
        return predictedDeathDate;
    }


    static public class LocalDateConverter implements DynamoDBTypeConverter<String, LocalDate> {

        @Override
        public String convert(final LocalDate time) {

            return time.toString();
        }

        @Override
        public LocalDate unconvert(final String stringValue) {

            return LocalDate.parse(stringValue);
        }
    }
}
